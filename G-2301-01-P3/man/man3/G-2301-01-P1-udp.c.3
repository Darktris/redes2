.TH "srclib/G-2301-01-P1-udp.c" 3 "Martes, 15 de Marzo de 2016" "Practica 1 - Redes de Comunicaciones II" \" -*- nroff -*-
.ad l
.nh
.SH NAME
srclib/G-2301-01-P1-udp.c \- Libreria de manejo de sockets UDP\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <G-2301-01-P1-udp\&.h>\fP
.br

.SS "Funciones"

.in +1c
.ti -1c
.RI "int \fBserver_udpsocket_open\fP (uint16_t port, int *socketd)"
.br
.RI "\fIAbre un socket UDP para servidor\&. \fP"
.ti -1c
.RI "int \fBclient_udpsocket_open\fP (uint16_t port, int *socketd)"
.br
.RI "\fIAbre un socket UDP para cliente\&. \fP"
.ti -1c
.RI "int \fBudpsocket_snd\fP (int socketd, void *data, size_t len, udpsocket_side *dst)"
.br
.RI "\fIEnvia los datos a traves del socket UDP\&. \fP"
.ti -1c
.RI "int \fBudpsocket_rcv\fP (int socketd, void *data, size_t max, size_t *len, udpsocket_side *src)"
.br
.RI "\fIRecibe a traves del socket UDP\&. \fP"
.in -1c
.SH "Descripción detallada"
.PP 
Libreria de manejo de sockets UDP\&. 


.PP
\fBAutor:\fP
.RS 4
Sergio Fuentes sergio.fuentesd@estudiante.uam.es 
.PP
Daniel Perdices daniel.perdices@estudiante.uam.es 
.RE
.PP
\fBFecha:\fP
.RS 4
2016/02/01 
.RE
.PP

.SH "Documentación de las funciones"
.PP 
.SS "int client_udpsocket_open (uint16_t port, int * socketd)"

.PP
Abre un socket UDP para cliente\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIport\fP Puerto desde el que se desea escuchar 
.br
\fIsocketd\fP Puntero al descriptor del socket 
.RE
.PP
\fBDevuelve:\fP
.RS 4
UDPOK si todo fue correcto UDPERR_ARGS/SOCKET/BIND/LISTEN en caso de error con estas funciones 
.RE
.PP

.SS "int server_udpsocket_open (uint16_t port, int * socketd)"

.PP
Abre un socket UDP para servidor\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIport\fP Puerto desde el que se desea escuchar 
.br
\fIsocketd\fP Puntero al descriptor del socket 
.RE
.PP
\fBDevuelve:\fP
.RS 4
UDPOK si todo funciono correctamente UDPERR_ARGS/SOCKET/BIND en caso de error con estas funciones 
.RE
.PP

.SS "int udpsocket_rcv (int socketd, void * data, size_t max, size_t * len, udpsocket_side * src)"

.PP
Recibe a traves del socket UDP\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIsocketd\fP Descriptor del socket escuchado 
.br
\fIdata\fP puntero a donde se almacenan los datos 
.br
\fImax\fP tamaño de la zona de memoria 
.br
\fIlen\fP puntero a la variable de longitud recibida 
.RE
.PP
\fBDevuelve:\fP
.RS 4
UDPOK si todo fue correcto UDPERR_ARGS/RECV en caso de error con estas funciones 
.RE
.PP

.SS "int udpsocket_snd (int socketd, void * data, size_t len, udpsocket_side * dst)"

.PP
Envia los datos a traves del socket UDP\&. 
.PP
\fBParámetros:\fP
.RS 4
\fIsocketd\fP Descriptor del socket escuchado 
.br
\fIdata\fP puntero a los datos que se han de enviar 
.br
\fIlen\fP tamano de los datos a enviar 
.RE
.PP
\fBDevuelve:\fP
.RS 4
UDPOK si todo fue correcto UDPERR_ARGS/SEND en caso de error con estas funciones 
.RE
.PP

.SH "Autor"
.PP 
Generado automáticamente por Doxygen para Practica 1 - Redes de Comunicaciones II del código fuente\&.
